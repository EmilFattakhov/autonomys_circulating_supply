"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/circulating-supply";
exports.ids = ["pages/api/circulating-supply"];
exports.modules = {

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fcirculating-supply&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fcirculating-supply.js&middlewareConfigBase64=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fcirculating-supply&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fcirculating-supply.js&middlewareConfigBase64=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_circulating_supply_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/circulating-supply.js */ \"(api)/./pages/api/circulating-supply.js\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_circulating_supply_js__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_circulating_supply_js__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/circulating-supply\",\n        pathname: \"/api/circulating-supply\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_circulating_supply_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmNpcmN1bGF0aW5nLXN1cHBseSZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTJGYXBpJTJGY2lyY3VsYXRpbmctc3VwcGx5LmpzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNMO0FBQzFEO0FBQzhEO0FBQzlEO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQyw2REFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsNkRBQVE7QUFDcEM7QUFDTyx3QkFBd0IsZ0hBQW1CO0FBQ2xEO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYXV0b25vbXlzLXRva2VuLWluZm8vPzZmMDkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzL2FwaS9jaXJjdWxhdGluZy1zdXBwbHkuanNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgaGFuZGxlciAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgXCJkZWZhdWx0XCIpO1xuLy8gUmUtZXhwb3J0IGNvbmZpZy5cbmV4cG9ydCBjb25zdCBjb25maWcgPSBob2lzdCh1c2VybGFuZCwgXCJjb25maWdcIik7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9jaXJjdWxhdGluZy1zdXBwbHlcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9jaXJjdWxhdGluZy1zdXBwbHlcIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiBcIlwiLFxuICAgICAgICBmaWxlbmFtZTogXCJcIlxuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fcirculating-supply&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fcirculating-supply.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./lib/tokenCalculations.js":
/*!**********************************!*\
  !*** ./lib/tokenCalculations.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BLOCK_TIME_SECONDS: () => (/* binding */ BLOCK_TIME_SECONDS),\n/* harmony export */   MAINNET_PHASE_1_LAUNCH: () => (/* binding */ MAINNET_PHASE_1_LAUNCH),\n/* harmony export */   TGE_DATE: () => (/* binding */ TGE_DATE),\n/* harmony export */   TOTAL_SUPPLY: () => (/* binding */ TOTAL_SUPPLY),\n/* harmony export */   calculateCirculatingSupply: () => (/* binding */ calculateCirculatingSupply),\n/* harmony export */   calculateFarmingRewards: () => (/* binding */ calculateFarmingRewards),\n/* harmony export */   getTokenDistribution: () => (/* binding */ getTokenDistribution)\n/* harmony export */ });\n// Token calculation utilities\nconst TOTAL_SUPPLY = 1000000000; // 1 billion tokens\nconst MAINNET_PHASE_1_LAUNCH = new Date(\"2024-11-06T17:30:00Z\"); // November 6, 2024 12:30PM EST\nconst TGE_DATE = new Date(\"2025-07-16T17:30:00Z\"); // July 16, 2025 12:30PM EST\nconst BLOCK_TIME_SECONDS = 6;\nconst BLOCKS_PER_DAY = 24 * 60 * 60 / BLOCK_TIME_SECONDS;\n// Initial allocations (at Phase-1 launch)\nconst ALLOCATIONS = {\n    investors: {\n        percent: 21.53,\n        tokens: 215300000,\n        vesting: \"cliff12_linear36\"\n    },\n    team: {\n        founders: {\n            percent: 2.00,\n            tokens: 20000000,\n            vesting: \"cliff12_linear36\"\n        },\n        advisors: {\n            percent: 2.35,\n            tokens: 23500000,\n            vesting: \"cliff12_linear36\"\n        },\n        staff: {\n            percent: 5.14,\n            tokens: 51400000,\n            vesting: \"cliff12_linear36\"\n        }\n    },\n    autonomysLabs: {\n        devcoTreasury: {\n            percent: 7.00,\n            tokens: 70000000,\n            vesting: \"cliff12_linear36\"\n        },\n        marketLiquidity: {\n            percent: 2.00,\n            tokens: 20000000,\n            vesting: \"immediate\"\n        }\n    },\n    partners: {\n        percent: 1.43,\n        tokens: 14300000,\n        vesting: \"cliff12_linear36\"\n    },\n    subspaceFoundation: {\n        operations: {\n            percent: 0.68,\n            tokens: 6800000,\n            vesting: \"immediate\"\n        },\n        nearTermTreasury: {\n            percent: 5.00,\n            tokens: 50000000,\n            vesting: \"tbd\"\n        },\n        longTermTreasury: {\n            percent: 10.00,\n            tokens: 100000000,\n            vesting: \"cliff12_linear36\"\n        }\n    },\n    testnets: {\n        testnetRewards: {\n            percent: 5.97,\n            tokens: 59700000,\n            vesting: \"immediate\"\n        },\n        stakeWars1: {\n            percent: 0.60,\n            tokens: 6000000,\n            vesting: \"immediate\"\n        },\n        stakeWars2: {\n            percent: 0.30,\n            tokens: 3000000,\n            vesting: \"locked\"\n        } // Not yet distributed\n    },\n    ambassadors: {\n        percent: 1.00,\n        tokens: 10000000,\n        vesting: \"variable\"\n    },\n    farmerRewards: {\n        percent: 35.00,\n        tokens: 350000000,\n        vesting: \"farming\"\n    }\n};\n// Calculate farming rewards using calibrated parameters to match known data\n// Known: ~9.1M AI3 tokens minted from November 2024 to Q1 2025 (official report)\n// Source: BlockScience dynamic issuance model + empirical data calibration\nfunction calculateFarmingRewards(currentDate = new Date()) {\n    // Mainnet farming started November 6, 2024 12:30PM EST\n    const FARMING_START_DATE = new Date(\"2024-11-06T17:30:00Z\");\n    // Rewards activated when 210PB target was reached (late November 2024)\n    const REWARDS_ACTIVATION_DATE = new Date(\"2024-11-26T00:00:00Z\");\n    // If before rewards activation, no rewards\n    if (currentDate < REWARDS_ACTIVATION_DATE) {\n        return 0;\n    }\n    const millisecondsSinceActivation = Math.max(0, currentDate - REWARDS_ACTIVATION_DATE);\n    const totalBlocks = Math.floor(millisecondsSinceActivation / (BLOCK_TIME_SECONDS * 1000));\n    if (totalBlocks === 0) return 0;\n    // Calibrated parameters to match empirical data of ~9.1M tokens by Q1 2025\n    // The actual implementation appears to have faster decay or other factors\n    const INITIAL_SUBSIDY = 5.0; // AI3 per block (confirmed from official sources)\n    const MAX_ISSUANCE_TOKENS = 350000000; // Total farming rewards pool\n    // Empirically calibrated decay rate to match known data points\n    // 9.1M tokens over ~255 days suggests faster decay than pure exponential\n    const EFFECTIVE_DECAY_RATE = 2.8; // Calibrated multiplier for decay\n    let totalRewards = 0;\n    // Use exponential decay with calibrated rate\n    // Process in chunks for performance\n    const CHUNK_SIZE = 50000;\n    for(let startBlock = 0; startBlock < totalBlocks; startBlock += CHUNK_SIZE){\n        const endBlock = Math.min(startBlock + CHUNK_SIZE, totalBlocks);\n        const midBlock = (startBlock + endBlock) / 2;\n        // Exponential decay formula with calibrated rate\n        const referenceSubsidy = INITIAL_SUBSIDY * Math.exp(-INITIAL_SUBSIDY * EFFECTIVE_DECAY_RATE * midBlock / MAX_ISSUANCE_TOKENS);\n        // Add rewards for all blocks in this chunk\n        const blocksInChunk = endBlock - startBlock;\n        totalRewards += referenceSubsidy * blocksInChunk;\n        // Safety check to not exceed max issuance\n        if (totalRewards >= MAX_ISSUANCE_TOKENS) {\n            return MAX_ISSUANCE_TOKENS;\n        }\n    }\n    return Math.floor(totalRewards);\n}\n// Calculate vested amount based on vesting schedule\nfunction calculateVestedAmount(allocation, vestingType, currentDate = new Date(), tgeDate = TGE_DATE) {\n    if (vestingType === \"immediate\") {\n        return allocation;\n    }\n    if (vestingType === \"locked\") {\n        return 0; // Not yet distributed\n    }\n    if (vestingType === \"farming\") {\n        return calculateFarmingRewards(currentDate);\n    }\n    if (vestingType === \"tbd\" || vestingType === \"variable\") {\n        return 0; // Conservative assumption\n    }\n    if (vestingType === \"cliff12_linear36\") {\n        const monthsSinceTGE = Math.max(0, (currentDate - tgeDate) / (1000 * 60 * 60 * 24 * 30.44));\n        if (monthsSinceTGE < 12) {\n            return 0; // Still in cliff period\n        }\n        if (monthsSinceTGE >= 48) {\n            return allocation; // Fully vested\n        }\n        // 25% at month 12, then linear over 36 months\n        const cliffAmount = allocation * 0.25;\n        const linearMonths = monthsSinceTGE - 12;\n        const linearAmount = allocation * 0.75 * linearMonths / 36;\n        return cliffAmount + linearAmount;\n    }\n    return 0;\n}\n// Calculate total circulating supply\nfunction calculateCirculatingSupply(currentDate = new Date(), tgeDate = TGE_DATE) {\n    // IMPORTANT: Token transferability is disabled at protocol level until TGE\n    // Even though tokens are minted at Phase-1, they cannot be transferred until TGE\n    const tgeOccurred = currentDate >= tgeDate;\n    if (!tgeOccurred) {\n        // Before TGE, circulating supply is 0 due to protocol-level transfer restrictions\n        return 0;\n    }\n    let circulatingSupply = 0;\n    // After TGE, count unlocked tokens:\n    // 1. Market Liquidity - unlocked at TGE\n    circulatingSupply += ALLOCATIONS.autonomysLabs.marketLiquidity.tokens;\n    // 2. Foundation Operations - liquid\n    circulatingSupply += ALLOCATIONS.subspaceFoundation.operations.tokens;\n    // 3. Testnet rewards - no lockup (but only transferable after TGE)\n    circulatingSupply += ALLOCATIONS.testnets.testnetRewards.tokens;\n    circulatingSupply += ALLOCATIONS.testnets.stakeWars1.tokens;\n    // Note: stakeWars2 tokens are locked (not yet distributed)\n    // 4. Vested tokens from cliff + linear schedules (all start from TGE date)\n    circulatingSupply += calculateVestedAmount(ALLOCATIONS.investors.tokens, \"cliff12_linear36\", currentDate, tgeDate);\n    circulatingSupply += calculateVestedAmount(ALLOCATIONS.team.founders.tokens, \"cliff12_linear36\", currentDate, tgeDate);\n    circulatingSupply += calculateVestedAmount(ALLOCATIONS.team.advisors.tokens, \"cliff12_linear36\", currentDate, tgeDate);\n    circulatingSupply += calculateVestedAmount(ALLOCATIONS.team.staff.tokens, \"cliff12_linear36\", currentDate, tgeDate);\n    circulatingSupply += calculateVestedAmount(ALLOCATIONS.autonomysLabs.devcoTreasury.tokens, \"cliff12_linear36\", currentDate, tgeDate);\n    circulatingSupply += calculateVestedAmount(ALLOCATIONS.partners.tokens, \"cliff12_linear36\", currentDate, tgeDate);\n    circulatingSupply += calculateVestedAmount(ALLOCATIONS.subspaceFoundation.longTermTreasury.tokens, \"cliff12_linear36\", currentDate, tgeDate);\n    // 5. Farming rewards (minted since Nov 6, 2024, but only transferable after TGE)\n    circulatingSupply += calculateFarmingRewards(currentDate);\n    return Math.floor(circulatingSupply);\n}\nfunction getTokenDistribution() {\n    return {\n        totalSupply: TOTAL_SUPPLY,\n        allocations: ALLOCATIONS,\n        currentCirculating: calculateCirculatingSupply(),\n        lastUpdated: new Date().toISOString()\n    };\n}\n// Export the calculateFarmingRewards function\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./lib/tokenCalculations.js\n");

/***/ }),

/***/ "(api)/./pages/api/circulating-supply.js":
/*!*****************************************!*\
  !*** ./pages/api/circulating-supply.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _lib_tokenCalculations__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/tokenCalculations */ \"(api)/./lib/tokenCalculations.js\");\n\nfunction handler(req, res) {\n    // Set CORS headers for POST requests\n    res.setHeader(\"Access-Control-Allow-Origin\", \"*\");\n    res.setHeader(\"Access-Control-Allow-Methods\", \"POST, OPTIONS\");\n    res.setHeader(\"Access-Control-Allow-Headers\", \"Content-Type, Authorization\");\n    // Handle preflight OPTIONS request\n    if (req.method === \"OPTIONS\") {\n        return res.status(200).end();\n    }\n    if (req.method !== \"POST\") {\n        return res.status(405).json({\n            error: \"Method not allowed\",\n            message: \"This endpoint only accepts POST requests\"\n        });\n    }\n    try {\n        // Use current time at the moment of request\n        const requestTime = new Date();\n        const tgeDate = _lib_tokenCalculations__WEBPACK_IMPORTED_MODULE_0__.TGE_DATE; // July 16, 2025 12:30PM EST\n        // Allow optional date override in request body for testing/historical data\n        const { date: customDate } = req.body || {};\n        const calculationDate = customDate ? new Date(customDate) : requestTime;\n        // Validate custom date if provided\n        if (customDate && isNaN(calculationDate.getTime())) {\n            return res.status(400).json({\n                error: \"Invalid date format\",\n                message: 'Please provide date in ISO 8601 format (e.g., \"2025-08-21T12:00:00Z\")'\n            });\n        }\n        const circulatingSupply = (0,_lib_tokenCalculations__WEBPACK_IMPORTED_MODULE_0__.calculateCirculatingSupply)(calculationDate, tgeDate);\n        const totalSupply = 1000000000;\n        const lockedSupply = totalSupply - circulatingSupply;\n        const response = {\n            total_supply: totalSupply,\n            circulating_supply: circulatingSupply,\n            locked_supply: lockedSupply,\n            circulating_percentage: (circulatingSupply / totalSupply * 100).toFixed(2),\n            calculation_date: calculationDate.toISOString(),\n            request_time: requestTime.toISOString(),\n            block_time_seconds: 6,\n            tge_date: tgeDate.toISOString(),\n            tge_occurred: calculationDate >= tgeDate,\n            note: \"Calculated at request time. For historical data, include 'date' in request body.\"\n        };\n        res.status(200).json(response);\n    } catch (error) {\n        console.error(\"Error calculating circulating supply:\", error);\n        res.status(500).json({\n            error: \"Internal server error\",\n            message: \"Failed to calculate circulating supply\"\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvY2lyY3VsYXRpbmctc3VwcGx5LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW1GO0FBRXBFLFNBQVNFLFFBQVFDLEdBQUcsRUFBRUMsR0FBRztJQUN0QyxxQ0FBcUM7SUFDckNBLElBQUlDLFNBQVMsQ0FBQywrQkFBK0I7SUFDN0NELElBQUlDLFNBQVMsQ0FBQyxnQ0FBZ0M7SUFDOUNELElBQUlDLFNBQVMsQ0FBQyxnQ0FBZ0M7SUFFOUMsbUNBQW1DO0lBQ25DLElBQUlGLElBQUlHLE1BQU0sS0FBSyxXQUFXO1FBQzVCLE9BQU9GLElBQUlHLE1BQU0sQ0FBQyxLQUFLQyxHQUFHO0lBQzVCO0lBRUEsSUFBSUwsSUFBSUcsTUFBTSxLQUFLLFFBQVE7UUFDekIsT0FBT0YsSUFBSUcsTUFBTSxDQUFDLEtBQUtFLElBQUksQ0FBQztZQUMxQkMsT0FBTztZQUNQQyxTQUFTO1FBQ1g7SUFDRjtJQUVBLElBQUk7UUFDRiw0Q0FBNEM7UUFDNUMsTUFBTUMsY0FBYyxJQUFJQztRQUN4QixNQUFNQyxVQUFVYiw0REFBUUEsRUFBRSw0QkFBNEI7UUFFdEQsMkVBQTJFO1FBQzNFLE1BQU0sRUFBRWMsTUFBTUMsVUFBVSxFQUFFLEdBQUdiLElBQUljLElBQUksSUFBSSxDQUFDO1FBQzFDLE1BQU1DLGtCQUFrQkYsYUFBYSxJQUFJSCxLQUFLRyxjQUFjSjtRQUU1RCxtQ0FBbUM7UUFDbkMsSUFBSUksY0FBY0csTUFBTUQsZ0JBQWdCRSxPQUFPLEtBQUs7WUFDbEQsT0FBT2hCLElBQUlHLE1BQU0sQ0FBQyxLQUFLRSxJQUFJLENBQUM7Z0JBQzFCQyxPQUFPO2dCQUNQQyxTQUFTO1lBQ1g7UUFDRjtRQUVBLE1BQU1VLG9CQUFvQnJCLGtGQUEwQkEsQ0FBQ2tCLGlCQUFpQko7UUFDdEUsTUFBTVEsY0FBYztRQUNwQixNQUFNQyxlQUFlRCxjQUFjRDtRQUVuQyxNQUFNRyxXQUFXO1lBQ2ZDLGNBQWNIO1lBQ2RJLG9CQUFvQkw7WUFDcEJNLGVBQWVKO1lBQ2ZLLHdCQUF3QixDQUFDLG9CQUFxQk4sY0FBZSxHQUFFLEVBQUdPLE9BQU8sQ0FBQztZQUMxRUMsa0JBQWtCWixnQkFBZ0JhLFdBQVc7WUFDN0NDLGNBQWNwQixZQUFZbUIsV0FBVztZQUNyQ0Usb0JBQW9CO1lBQ3BCQyxVQUFVcEIsUUFBUWlCLFdBQVc7WUFDN0JJLGNBQWNqQixtQkFBbUJKO1lBQ2pDc0IsTUFBTTtRQUNSO1FBRUFoQyxJQUFJRyxNQUFNLENBQUMsS0FBS0UsSUFBSSxDQUFDZTtJQUN2QixFQUFFLE9BQU9kLE9BQU87UUFDZDJCLFFBQVEzQixLQUFLLENBQUMseUNBQXlDQTtRQUN2RE4sSUFBSUcsTUFBTSxDQUFDLEtBQUtFLElBQUksQ0FBQztZQUNuQkMsT0FBTztZQUNQQyxTQUFTO1FBQ1g7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYXV0b25vbXlzLXRva2VuLWluZm8vLi9wYWdlcy9hcGkvY2lyY3VsYXRpbmctc3VwcGx5LmpzPzAyOTUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY2FsY3VsYXRlQ2lyY3VsYXRpbmdTdXBwbHksIFRHRV9EQVRFIH0gZnJvbSAnLi4vLi4vbGliL3Rva2VuQ2FsY3VsYXRpb25zJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaGFuZGxlcihyZXEsIHJlcykge1xuICAvLyBTZXQgQ09SUyBoZWFkZXJzIGZvciBQT1NUIHJlcXVlc3RzXG4gIHJlcy5zZXRIZWFkZXIoJ0FjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbicsICcqJyk7XG4gIHJlcy5zZXRIZWFkZXIoJ0FjY2Vzcy1Db250cm9sLUFsbG93LU1ldGhvZHMnLCAnUE9TVCwgT1BUSU9OUycpO1xuICByZXMuc2V0SGVhZGVyKCdBY2Nlc3MtQ29udHJvbC1BbGxvdy1IZWFkZXJzJywgJ0NvbnRlbnQtVHlwZSwgQXV0aG9yaXphdGlvbicpO1xuXG4gIC8vIEhhbmRsZSBwcmVmbGlnaHQgT1BUSU9OUyByZXF1ZXN0XG4gIGlmIChyZXEubWV0aG9kID09PSAnT1BUSU9OUycpIHtcbiAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmVuZCgpO1xuICB9XG5cbiAgaWYgKHJlcS5tZXRob2QgIT09ICdQT1NUJykge1xuICAgIHJldHVybiByZXMuc3RhdHVzKDQwNSkuanNvbih7IFxuICAgICAgZXJyb3I6ICdNZXRob2Qgbm90IGFsbG93ZWQnLFxuICAgICAgbWVzc2FnZTogJ1RoaXMgZW5kcG9pbnQgb25seSBhY2NlcHRzIFBPU1QgcmVxdWVzdHMnXG4gICAgfSk7XG4gIH1cblxuICB0cnkge1xuICAgIC8vIFVzZSBjdXJyZW50IHRpbWUgYXQgdGhlIG1vbWVudCBvZiByZXF1ZXN0XG4gICAgY29uc3QgcmVxdWVzdFRpbWUgPSBuZXcgRGF0ZSgpO1xuICAgIGNvbnN0IHRnZURhdGUgPSBUR0VfREFURTsgLy8gSnVseSAxNiwgMjAyNSAxMjozMFBNIEVTVFxuICAgIFxuICAgIC8vIEFsbG93IG9wdGlvbmFsIGRhdGUgb3ZlcnJpZGUgaW4gcmVxdWVzdCBib2R5IGZvciB0ZXN0aW5nL2hpc3RvcmljYWwgZGF0YVxuICAgIGNvbnN0IHsgZGF0ZTogY3VzdG9tRGF0ZSB9ID0gcmVxLmJvZHkgfHwge307XG4gICAgY29uc3QgY2FsY3VsYXRpb25EYXRlID0gY3VzdG9tRGF0ZSA/IG5ldyBEYXRlKGN1c3RvbURhdGUpIDogcmVxdWVzdFRpbWU7XG4gICAgXG4gICAgLy8gVmFsaWRhdGUgY3VzdG9tIGRhdGUgaWYgcHJvdmlkZWRcbiAgICBpZiAoY3VzdG9tRGF0ZSAmJiBpc05hTihjYWxjdWxhdGlvbkRhdGUuZ2V0VGltZSgpKSkge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcbiAgICAgICAgZXJyb3I6ICdJbnZhbGlkIGRhdGUgZm9ybWF0JyxcbiAgICAgICAgbWVzc2FnZTogJ1BsZWFzZSBwcm92aWRlIGRhdGUgaW4gSVNPIDg2MDEgZm9ybWF0IChlLmcuLCBcIjIwMjUtMDgtMjFUMTI6MDA6MDBaXCIpJ1xuICAgICAgfSk7XG4gICAgfVxuICAgIFxuICAgIGNvbnN0IGNpcmN1bGF0aW5nU3VwcGx5ID0gY2FsY3VsYXRlQ2lyY3VsYXRpbmdTdXBwbHkoY2FsY3VsYXRpb25EYXRlLCB0Z2VEYXRlKTtcbiAgICBjb25zdCB0b3RhbFN1cHBseSA9IDFfMDAwXzAwMF8wMDA7XG4gICAgY29uc3QgbG9ja2VkU3VwcGx5ID0gdG90YWxTdXBwbHkgLSBjaXJjdWxhdGluZ1N1cHBseTtcblxuICAgIGNvbnN0IHJlc3BvbnNlID0ge1xuICAgICAgdG90YWxfc3VwcGx5OiB0b3RhbFN1cHBseSxcbiAgICAgIGNpcmN1bGF0aW5nX3N1cHBseTogY2lyY3VsYXRpbmdTdXBwbHksXG4gICAgICBsb2NrZWRfc3VwcGx5OiBsb2NrZWRTdXBwbHksXG4gICAgICBjaXJjdWxhdGluZ19wZXJjZW50YWdlOiAoKGNpcmN1bGF0aW5nU3VwcGx5IC8gdG90YWxTdXBwbHkpICogMTAwKS50b0ZpeGVkKDIpLFxuICAgICAgY2FsY3VsYXRpb25fZGF0ZTogY2FsY3VsYXRpb25EYXRlLnRvSVNPU3RyaW5nKCksXG4gICAgICByZXF1ZXN0X3RpbWU6IHJlcXVlc3RUaW1lLnRvSVNPU3RyaW5nKCksXG4gICAgICBibG9ja190aW1lX3NlY29uZHM6IDYsXG4gICAgICB0Z2VfZGF0ZTogdGdlRGF0ZS50b0lTT1N0cmluZygpLFxuICAgICAgdGdlX29jY3VycmVkOiBjYWxjdWxhdGlvbkRhdGUgPj0gdGdlRGF0ZSxcbiAgICAgIG5vdGU6IFwiQ2FsY3VsYXRlZCBhdCByZXF1ZXN0IHRpbWUuIEZvciBoaXN0b3JpY2FsIGRhdGEsIGluY2x1ZGUgJ2RhdGUnIGluIHJlcXVlc3QgYm9keS5cIlxuICAgIH07XG5cbiAgICByZXMuc3RhdHVzKDIwMCkuanNvbihyZXNwb25zZSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgY2FsY3VsYXRpbmcgY2lyY3VsYXRpbmcgc3VwcGx5OicsIGVycm9yKTtcbiAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IFxuICAgICAgZXJyb3I6ICdJbnRlcm5hbCBzZXJ2ZXIgZXJyb3InLFxuICAgICAgbWVzc2FnZTogJ0ZhaWxlZCB0byBjYWxjdWxhdGUgY2lyY3VsYXRpbmcgc3VwcGx5J1xuICAgIH0pO1xuICB9XG59Il0sIm5hbWVzIjpbImNhbGN1bGF0ZUNpcmN1bGF0aW5nU3VwcGx5IiwiVEdFX0RBVEUiLCJoYW5kbGVyIiwicmVxIiwicmVzIiwic2V0SGVhZGVyIiwibWV0aG9kIiwic3RhdHVzIiwiZW5kIiwianNvbiIsImVycm9yIiwibWVzc2FnZSIsInJlcXVlc3RUaW1lIiwiRGF0ZSIsInRnZURhdGUiLCJkYXRlIiwiY3VzdG9tRGF0ZSIsImJvZHkiLCJjYWxjdWxhdGlvbkRhdGUiLCJpc05hTiIsImdldFRpbWUiLCJjaXJjdWxhdGluZ1N1cHBseSIsInRvdGFsU3VwcGx5IiwibG9ja2VkU3VwcGx5IiwicmVzcG9uc2UiLCJ0b3RhbF9zdXBwbHkiLCJjaXJjdWxhdGluZ19zdXBwbHkiLCJsb2NrZWRfc3VwcGx5IiwiY2lyY3VsYXRpbmdfcGVyY2VudGFnZSIsInRvRml4ZWQiLCJjYWxjdWxhdGlvbl9kYXRlIiwidG9JU09TdHJpbmciLCJyZXF1ZXN0X3RpbWUiLCJibG9ja190aW1lX3NlY29uZHMiLCJ0Z2VfZGF0ZSIsInRnZV9vY2N1cnJlZCIsIm5vdGUiLCJjb25zb2xlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./pages/api/circulating-supply.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fcirculating-supply&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fcirculating-supply.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();